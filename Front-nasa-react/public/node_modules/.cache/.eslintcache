[{"/Users/SergioIglesias/nytype/src/index.tsx":"1","/Users/SergioIglesias/nytype/src/reportWebVitals.ts":"2","/Users/SergioIglesias/nytype/src/App.tsx":"3","/Users/SergioIglesias/nytype/src/services/api.ts":"4","/Users/SergioIglesias/nytype/src/services/storage.ts":"5","/Users/SergioIglesias/nytype/src/components/card/index.tsx":"6","/Users/SergioIglesias/nytype/src/components/button/index.tsx":"7","/Users/SergioIglesias/nytype/src/components/styles/theme.ts":"8","/Users/SergioIglesias/nytype/src/components/button/styles.ts":"9","/Users/SergioIglesias/nytype/src/components/container/Router/index.tsx":"10","/Users/SergioIglesias/nytype/src/components/views/Home/index.tsx":"11","/Users/SergioIglesias/nytype/src/components/views/Details/index.tsx":"12"},{"size":604,"mtime":1676717999226,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1675453962005,"results":"15","hashOfConfig":"14"},{"size":568,"mtime":1676718290961,"results":"16","hashOfConfig":"14"},{"size":1572,"mtime":1675878328897,"results":"17","hashOfConfig":"14"},{"size":725,"mtime":1675878326561,"results":"18","hashOfConfig":"14"},{"size":598,"mtime":1676053166259,"results":"19","hashOfConfig":"14"},{"size":296,"mtime":1676449949766,"results":"20","hashOfConfig":"14"},{"size":126,"mtime":1676049884815,"results":"21","hashOfConfig":"14"},{"size":233,"mtime":1676049933632,"results":"22","hashOfConfig":"14"},{"size":424,"mtime":1676288367474,"results":"23","hashOfConfig":"14"},{"size":2374,"mtime":1676313392326,"results":"24","hashOfConfig":"14"},{"size":114,"mtime":1676060448941,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v08sp2",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/SergioIglesias/nytype/src/index.tsx",["65"],[],"/Users/SergioIglesias/nytype/src/reportWebVitals.ts",[],[],[],"/Users/SergioIglesias/nytype/src/App.tsx",["66","67","68","69","70","71","72","73","74"],[],"/Users/SergioIglesias/nytype/src/services/api.ts",[],[],"/Users/SergioIglesias/nytype/src/services/storage.ts",[],[],"/Users/SergioIglesias/nytype/src/components/card/index.tsx",[],[],"/Users/SergioIglesias/nytype/src/components/button/index.tsx",["75","76"],[],"import {FC, useCallback, useEffect} from 'react'\nimport { CustomButton } from './styles'\nimport {Props} from './types'\n\nconst Button: FC<Props> = ({onClick}) => {\n  \n\n\n\n\n\n    return (\n        <CustomButton \n        onClick={onClick}>See More\n        </CustomButton>\n    )\n}\n\nexport default Button","/Users/SergioIglesias/nytype/src/components/styles/theme.ts",[],[],"/Users/SergioIglesias/nytype/src/components/button/styles.ts",[],[],"/Users/SergioIglesias/nytype/src/components/container/Router/index.tsx",[],[],"/Users/SergioIglesias/nytype/src/components/views/Home/index.tsx",["77"],[],"import { FC } from \"react\";\nimport {useState, useEffect } from 'react';\nimport { BooksList, getNewYorkBooks, getListDetails} from \"../../../services/api\"\nimport Card from '../../card/index';\nimport { ThemeProvider } from \"styled-components\";\nimport theme from '../../styles/theme'\nimport { CustomButton } from \"../../button/styles\"\n\n\nconst Home: FC = () => {\n  \n// function App() {\n    const [data, setData] = useState<BooksList[]>([])\n    const [dataDetails, setDataDetails] = useState<any[]>([])\n    const [showList, setShowList] = useState<boolean>(true)\n    useEffect(() => {\n      getNewYorkBooks().then(data => {\n        if (data) {\n          setData(data)\n        }\n      })\n    \n     }, [])\n  \n    const callListDetails = async (listName: string) => {\n        const data = await getListDetails(listName)\n        console.log(data)\n        setDataDetails(data)\n        setShowList(false)\n    }\n  \n    return (\n      <ThemeProvider theme = {theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className='cards'>\n            {showList && data?.map(bookList => (\n              <Card \n                title={bookList.display_name} \n                updatedDes={bookList.updated} \n                oldestDes={bookList.oldest_published_date} \n                newestDes={bookList.newest_published_date} \n                listName={bookList.list_name_encoded}\n                image={bookList.image_url}\n                onClick={() => callListDetails(bookList.list_name_encoded)}\n              />\n            ))}\n            {!showList && dataDetails?.map(listDetails => (\n              <>\n              <div className=\"container-details\">\n             <div>\n             <img src={listDetails.book_image} /> \n                <p>{listDetails.title}</p>\n                <p>{listDetails.description}</p>\n             </div>\n                <CustomButton>\n                <div className='amazonLink'><a target=\"blank\" rel=\"noreferrer\" className=\"amazonText\"href={listDetails.amazon_product_url}>Amazon</a></div>\n       \n                </CustomButton>\n              <br />\n             \n              <button onClick={() => setShowList(true)}>Back</button>\n             \n              </div>\n              </>\n              \n            ))}\n          </div>\n        </header>\n      </div>\n      </ThemeProvider>\n    );\n    }\nexport default Home","/Users/SergioIglesias/nytype/src/components/views/Details/index.tsx",[],[],{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":23},{"ruleId":"78","severity":1,"message":"82","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":18},{"ruleId":"78","severity":1,"message":"83","line":1,"column":20,"nodeType":"80","messageId":"81","endLine":1,"endColumn":29},{"ruleId":"78","severity":1,"message":"84","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},{"ruleId":"78","severity":1,"message":"85","line":2,"column":21,"nodeType":"80","messageId":"81","endLine":2,"endColumn":36},{"ruleId":"78","severity":1,"message":"86","line":2,"column":38,"nodeType":"80","messageId":"81","endLine":2,"endColumn":52},{"ruleId":"78","severity":1,"message":"87","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":12},{"ruleId":"78","severity":1,"message":"88","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":15},{"ruleId":"78","severity":1,"message":"89","line":6,"column":17,"nodeType":"80","messageId":"81","endLine":6,"endColumn":22},{"ruleId":"78","severity":1,"message":"90","line":7,"column":10,"nodeType":"80","messageId":"81","endLine":7,"endColumn":22},{"ruleId":"78","severity":1,"message":"91","line":1,"column":13,"nodeType":"80","messageId":"81","endLine":1,"endColumn":24},{"ruleId":"78","severity":1,"message":"83","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":52,"column":14,"nodeType":"94","endLine":52,"endColumn":50},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'BooksList' is defined but never used.","'getNewYorkBooks' is defined but never used.","'getListDetails' is defined but never used.","'Card' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'CustomButton' is defined but never used.","'useCallback' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]